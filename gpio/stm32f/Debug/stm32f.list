
stm32f.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000738  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080008c0  080008c8  000018c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080008c0  080008c0  000018c8  2**0
                  CONTENTS
  4 .ARM          00000000  080008c0  080008c0  000018c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008c0  080008c8  000018c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008c0  080008c0  000018c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080008c4  080008c4  000018c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000018c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000018c8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b67  00000000  00000000  000018f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002f1  00000000  00000000  00002459  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00002750  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000085  00000000  00000000  00002810  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000023c4  00000000  00000000  00002895  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000012fa  00000000  00000000  00004c59  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009caa  00000000  00000000  00005f53  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000fbfd  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000248  00000000  00000000  0000fc40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006b  00000000  00000000  0000fe88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080008a8 	.word	0x080008a8

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080008a8 	.word	0x080008a8

080001c8 <delay>:


#include "stm32f407xx.h"
#include "stm32f407xx_gpio_driver.h"

void delay (void){
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 100000/2; i++) {
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 80001e0:	4293      	cmp	r3, r2
 80001e2:	d9f7      	bls.n	80001d4 <delay+0xc>

	}
}
 80001e4:	bf00      	nop
 80001e6:	bf00      	nop
 80001e8:	370c      	adds	r7, #12
 80001ea:	46bd      	mov	sp, r7
 80001ec:	bc80      	pop	{r7}
 80001ee:	4770      	bx	lr

080001f0 <main>:



int main (void ){
 80001f0:	b580      	push	{r7, lr}
 80001f2:	b084      	sub	sp, #16
 80001f4:	af00      	add	r7, sp, #0
	    GPIO_Handle_t GpioLed ;
		GpioLed.pGPIOx = GPIOD ;
 80001f6:	4b10      	ldr	r3, [pc, #64]	@ (8000238 <main+0x48>)
 80001f8:	607b      	str	r3, [r7, #4]
		GPIOD_CLOCK_ENABLE() ;
 80001fa:	4b10      	ldr	r3, [pc, #64]	@ (800023c <main+0x4c>)
 80001fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001fe:	4a0f      	ldr	r2, [pc, #60]	@ (800023c <main+0x4c>)
 8000200:	f043 0308 	orr.w	r3, r3, #8
 8000204:	6313      	str	r3, [r2, #48]	@ 0x30

		GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13 ;
 8000206:	230d      	movs	r3, #13
 8000208:	723b      	strb	r3, [r7, #8]
		GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT ;
 800020a:	2301      	movs	r3, #1
 800020c:	727b      	strb	r3, [r7, #9]
		GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP ;
 800020e:	2300      	movs	r3, #0
 8000210:	733b      	strb	r3, [r7, #12]
		GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH ;
 8000212:	2303      	movs	r3, #3
 8000214:	72bb      	strb	r3, [r7, #10]
		GpioLed.GPIO_PinConfig.GPIO_PinPUPDControl = GPIO_NO_PUPD ;
 8000216:	2300      	movs	r3, #0
 8000218:	72fb      	strb	r3, [r7, #11]
		GpioLed.GPIO_PinConfig.GPIO_PinAltFunMode = 0 ;
 800021a:	2300      	movs	r3, #0
 800021c:	737b      	strb	r3, [r7, #13]
		GPIO_Init(&GpioLed) ;
 800021e:	1d3b      	adds	r3, r7, #4
 8000220:	4618      	mov	r0, r3
 8000222:	f000 f94f 	bl	80004c4 <GPIO_Init>
//	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, GPIO_PIN_SET);


		while(1){

			GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000226:	210c      	movs	r1, #12
 8000228:	4803      	ldr	r0, [pc, #12]	@ (8000238 <main+0x48>)
 800022a:	f000 fb05 	bl	8000838 <GPIO_ToggleOutputPin>


			delay();
 800022e:	f7ff ffcb 	bl	80001c8 <delay>
			GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000232:	bf00      	nop
 8000234:	e7f7      	b.n	8000226 <main+0x36>
 8000236:	bf00      	nop
 8000238:	40020c00 	.word	0x40020c00
 800023c:	40023800 	.word	0x40023800

08000240 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000240:	480d      	ldr	r0, [pc, #52]	@ (8000278 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000242:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000244:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000248:	480c      	ldr	r0, [pc, #48]	@ (800027c <LoopForever+0x6>)
  ldr r1, =_edata
 800024a:	490d      	ldr	r1, [pc, #52]	@ (8000280 <LoopForever+0xa>)
  ldr r2, =_sidata
 800024c:	4a0d      	ldr	r2, [pc, #52]	@ (8000284 <LoopForever+0xe>)
  movs r3, #0
 800024e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000250:	e002      	b.n	8000258 <LoopCopyDataInit>

08000252 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000252:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000254:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000256:	3304      	adds	r3, #4

08000258 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000258:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800025a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800025c:	d3f9      	bcc.n	8000252 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025e:	4a0a      	ldr	r2, [pc, #40]	@ (8000288 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000260:	4c0a      	ldr	r4, [pc, #40]	@ (800028c <LoopForever+0x16>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000264:	e001      	b.n	800026a <LoopFillZerobss>

08000266 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000266:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000268:	3204      	adds	r2, #4

0800026a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800026a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800026c:	d3fb      	bcc.n	8000266 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800026e:	f000 faf7 	bl	8000860 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000272:	f7ff ffbd 	bl	80001f0 <main>

08000276 <LoopForever>:

LoopForever:
  b LoopForever
 8000276:	e7fe      	b.n	8000276 <LoopForever>
  ldr   r0, =_estack
 8000278:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800027c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000280:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000284:	080008c8 	.word	0x080008c8
  ldr r2, =_sbss
 8000288:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800028c:	2000001c 	.word	0x2000001c

08000290 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000290:	e7fe      	b.n	8000290 <ADC_IRQHandler>
	...

08000294 <GPIO_PeripClockControl>:
#include "stm32f407xx_gpio_driver.h"
#include <stdio.h>


// clock control api for gpio
void GPIO_PeripClockControl(GPIO_RegDef_t *pGPIOx , uint8_t EnorDi) {
 8000294:	b480      	push	{r7}
 8000296:	b083      	sub	sp, #12
 8000298:	af00      	add	r7, sp, #0
 800029a:	6078      	str	r0, [r7, #4]
 800029c:	460b      	mov	r3, r1
 800029e:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE){
 80002a0:	78fb      	ldrb	r3, [r7, #3]
 80002a2:	2b01      	cmp	r3, #1
 80002a4:	d178      	bne.n	8000398 <GPIO_PeripClockControl+0x104>

		if (pGPIOx == GPIOA) {
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	4a7a      	ldr	r2, [pc, #488]	@ (8000494 <GPIO_PeripClockControl+0x200>)
 80002aa:	4293      	cmp	r3, r2
 80002ac:	d106      	bne.n	80002bc <GPIO_PeripClockControl+0x28>
			GPIOA_CLOCK_ENABLE();
 80002ae:	4b7a      	ldr	r3, [pc, #488]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80002b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002b2:	4a79      	ldr	r2, [pc, #484]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80002b4:	f043 0301 	orr.w	r3, r3, #1
 80002b8:	6313      	str	r3, [r2, #48]	@ 0x30
			GPIOJ_CLOCK_DISABLE();
		}else if (pGPIOx == GPIOK){
			GPIOK_CLOCK_DISABLE();
		}
	}
}
 80002ba:	e0e5      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOB) {
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	4a77      	ldr	r2, [pc, #476]	@ (800049c <GPIO_PeripClockControl+0x208>)
 80002c0:	4293      	cmp	r3, r2
 80002c2:	d106      	bne.n	80002d2 <GPIO_PeripClockControl+0x3e>
			GPIOB_CLOCK_ENABLE();
 80002c4:	4b74      	ldr	r3, [pc, #464]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002c8:	4a73      	ldr	r2, [pc, #460]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80002ca:	f043 0302 	orr.w	r3, r3, #2
 80002ce:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002d0:	e0da      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOC){
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a72      	ldr	r2, [pc, #456]	@ (80004a0 <GPIO_PeripClockControl+0x20c>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_PeripClockControl+0x54>
			GPIOC_CLOCK_ENABLE();
 80002da:	4b6f      	ldr	r3, [pc, #444]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002de:	4a6e      	ldr	r2, [pc, #440]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80002e0:	f043 0304 	orr.w	r3, r3, #4
 80002e4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002e6:	e0cf      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOD){
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a6e      	ldr	r2, [pc, #440]	@ (80004a4 <GPIO_PeripClockControl+0x210>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeripClockControl+0x6a>
			GPIOD_CLOCK_ENABLE();
 80002f0:	4b69      	ldr	r3, [pc, #420]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002f4:	4a68      	ldr	r2, [pc, #416]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80002f6:	f043 0308 	orr.w	r3, r3, #8
 80002fa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002fc:	e0c4      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOE){
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a69      	ldr	r2, [pc, #420]	@ (80004a8 <GPIO_PeripClockControl+0x214>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeripClockControl+0x80>
			GPIOE_CLOCK_ENABLE();
 8000306:	4b64      	ldr	r3, [pc, #400]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800030a:	4a63      	ldr	r2, [pc, #396]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800030c:	f043 0310 	orr.w	r3, r3, #16
 8000310:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000312:	e0b9      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOF){
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a65      	ldr	r2, [pc, #404]	@ (80004ac <GPIO_PeripClockControl+0x218>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeripClockControl+0x96>
			GPIOF_CLOCK_ENABLE();
 800031c:	4b5e      	ldr	r3, [pc, #376]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000320:	4a5d      	ldr	r2, [pc, #372]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000322:	f043 0320 	orr.w	r3, r3, #32
 8000326:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000328:	e0ae      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOG){
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a60      	ldr	r2, [pc, #384]	@ (80004b0 <GPIO_PeripClockControl+0x21c>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeripClockControl+0xac>
			GPIOG_CLOCK_ENABLE();
 8000332:	4b59      	ldr	r3, [pc, #356]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000336:	4a58      	ldr	r2, [pc, #352]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000338:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800033c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800033e:	e0a3      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOH){
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a5c      	ldr	r2, [pc, #368]	@ (80004b4 <GPIO_PeripClockControl+0x220>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeripClockControl+0xc2>
			GPIOH_CLOCK_ENABLE();
 8000348:	4b53      	ldr	r3, [pc, #332]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800034c:	4a52      	ldr	r2, [pc, #328]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800034e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000352:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000354:	e098      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOI){
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a57      	ldr	r2, [pc, #348]	@ (80004b8 <GPIO_PeripClockControl+0x224>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeripClockControl+0xd8>
			GPIOI_CLOCK_ENABLE();
 800035e:	4b4e      	ldr	r3, [pc, #312]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000362:	4a4d      	ldr	r2, [pc, #308]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000364:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000368:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800036a:	e08d      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOJ){
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a53      	ldr	r2, [pc, #332]	@ (80004bc <GPIO_PeripClockControl+0x228>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeripClockControl+0xee>
			GPIOJ_CLOCK_ENABLE();
 8000374:	4b48      	ldr	r3, [pc, #288]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000378:	4a47      	ldr	r2, [pc, #284]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800037a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800037e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000380:	e082      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOK){
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a4e      	ldr	r2, [pc, #312]	@ (80004c0 <GPIO_PeripClockControl+0x22c>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d17e      	bne.n	8000488 <GPIO_PeripClockControl+0x1f4>
			GPIOK_CLOCK_ENABLE();
 800038a:	4b43      	ldr	r3, [pc, #268]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800038e:	4a42      	ldr	r2, [pc, #264]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000390:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000394:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000396:	e077      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		if (pGPIOx == GPIOA) {
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a3e      	ldr	r2, [pc, #248]	@ (8000494 <GPIO_PeripClockControl+0x200>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeripClockControl+0x11a>
			GPIOA_CLOCK_DISABLE();
 80003a0:	4b3d      	ldr	r3, [pc, #244]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a4:	4a3c      	ldr	r2, [pc, #240]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003a6:	f023 0301 	bic.w	r3, r3, #1
 80003aa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ac:	e06c      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOB) {
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a3a      	ldr	r2, [pc, #232]	@ (800049c <GPIO_PeripClockControl+0x208>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeripClockControl+0x130>
			GPIOB_CLOCK_DISABLE();
 80003b6:	4b38      	ldr	r3, [pc, #224]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ba:	4a37      	ldr	r2, [pc, #220]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003bc:	f023 0302 	bic.w	r3, r3, #2
 80003c0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c2:	e061      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOC){
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a36      	ldr	r2, [pc, #216]	@ (80004a0 <GPIO_PeripClockControl+0x20c>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeripClockControl+0x146>
			GPIOC_CLOCK_DISABLE();
 80003cc:	4b32      	ldr	r3, [pc, #200]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d0:	4a31      	ldr	r2, [pc, #196]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003d2:	f023 0304 	bic.w	r3, r3, #4
 80003d6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003d8:	e056      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOD){
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a31      	ldr	r2, [pc, #196]	@ (80004a4 <GPIO_PeripClockControl+0x210>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d106      	bne.n	80003f0 <GPIO_PeripClockControl+0x15c>
			GPIOD_CLOCK_DISABLE();
 80003e2:	4b2d      	ldr	r3, [pc, #180]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003e6:	4a2c      	ldr	r2, [pc, #176]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003e8:	f023 0308 	bic.w	r3, r3, #8
 80003ec:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ee:	e04b      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOE){
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a2d      	ldr	r2, [pc, #180]	@ (80004a8 <GPIO_PeripClockControl+0x214>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_PeripClockControl+0x172>
			GPIOE_CLOCK_DISABLE();
 80003f8:	4b27      	ldr	r3, [pc, #156]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003fc:	4a26      	ldr	r2, [pc, #152]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 80003fe:	f023 0310 	bic.w	r3, r3, #16
 8000402:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000404:	e040      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOF){
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a28      	ldr	r2, [pc, #160]	@ (80004ac <GPIO_PeripClockControl+0x218>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_PeripClockControl+0x188>
			GPIOF_CLOCK_DISABLE();
 800040e:	4b22      	ldr	r3, [pc, #136]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000412:	4a21      	ldr	r2, [pc, #132]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000414:	f023 0320 	bic.w	r3, r3, #32
 8000418:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800041a:	e035      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOG){
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a24      	ldr	r2, [pc, #144]	@ (80004b0 <GPIO_PeripClockControl+0x21c>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d106      	bne.n	8000432 <GPIO_PeripClockControl+0x19e>
			GPIOG_CLOCK_DISABLE();
 8000424:	4b1c      	ldr	r3, [pc, #112]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000428:	4a1b      	ldr	r2, [pc, #108]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800042a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800042e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000430:	e02a      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOH){
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4a1f      	ldr	r2, [pc, #124]	@ (80004b4 <GPIO_PeripClockControl+0x220>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d106      	bne.n	8000448 <GPIO_PeripClockControl+0x1b4>
			GPIOH_CLOCK_DISABLE();
 800043a:	4b17      	ldr	r3, [pc, #92]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800043c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800043e:	4a16      	ldr	r2, [pc, #88]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000440:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000444:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000446:	e01f      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOI){
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a1b      	ldr	r2, [pc, #108]	@ (80004b8 <GPIO_PeripClockControl+0x224>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d106      	bne.n	800045e <GPIO_PeripClockControl+0x1ca>
			GPIOI_CLOCK_DISABLE();
 8000450:	4b11      	ldr	r3, [pc, #68]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000454:	4a10      	ldr	r2, [pc, #64]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000456:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800045a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800045c:	e014      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOJ){
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	4a16      	ldr	r2, [pc, #88]	@ (80004bc <GPIO_PeripClockControl+0x228>)
 8000462:	4293      	cmp	r3, r2
 8000464:	d106      	bne.n	8000474 <GPIO_PeripClockControl+0x1e0>
			GPIOJ_CLOCK_DISABLE();
 8000466:	4b0c      	ldr	r3, [pc, #48]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000468:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800046a:	4a0b      	ldr	r2, [pc, #44]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800046c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000470:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000472:	e009      	b.n	8000488 <GPIO_PeripClockControl+0x1f4>
		}else if (pGPIOx == GPIOK){
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	4a12      	ldr	r2, [pc, #72]	@ (80004c0 <GPIO_PeripClockControl+0x22c>)
 8000478:	4293      	cmp	r3, r2
 800047a:	d105      	bne.n	8000488 <GPIO_PeripClockControl+0x1f4>
			GPIOK_CLOCK_DISABLE();
 800047c:	4b06      	ldr	r3, [pc, #24]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 800047e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000480:	4a05      	ldr	r2, [pc, #20]	@ (8000498 <GPIO_PeripClockControl+0x204>)
 8000482:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000486:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000488:	bf00      	nop
 800048a:	370c      	adds	r7, #12
 800048c:	46bd      	mov	sp, r7
 800048e:	bc80      	pop	{r7}
 8000490:	4770      	bx	lr
 8000492:	bf00      	nop
 8000494:	40020000 	.word	0x40020000
 8000498:	40023800 	.word	0x40023800
 800049c:	40020400 	.word	0x40020400
 80004a0:	40020800 	.word	0x40020800
 80004a4:	40020c00 	.word	0x40020c00
 80004a8:	40021000 	.word	0x40021000
 80004ac:	40021400 	.word	0x40021400
 80004b0:	40021800 	.word	0x40021800
 80004b4:	40021c00 	.word	0x40021c00
 80004b8:	40022000 	.word	0x40022000
 80004bc:	40022400 	.word	0x40022400
 80004c0:	40022800 	.word	0x40022800

080004c4 <GPIO_Init>:

// gpio init and deinit apis
void GPIO_Init(GPIO_Handle_t* pGPIOHandle) {
 80004c4:	b580      	push	{r7, lr}
 80004c6:	b086      	sub	sp, #24
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	6078      	str	r0, [r7, #4]
			uint32_t temp = 0 ;
 80004cc:	2300      	movs	r3, #0
 80004ce:	617b      	str	r3, [r7, #20]

			// enable the peripheral clock
			GPIO_PeripClockControl(pGPIOHandle->pGPIOx, ENABLE) ;
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	2101      	movs	r1, #1
 80004d6:	4618      	mov	r0, r3
 80004d8:	f7ff fedc 	bl	8000294 <GPIO_PeripClockControl>

	// configure the modes of a gpio pin
		// configuring non interrupt modes
		if ( pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOGE ) {
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	795b      	ldrb	r3, [r3, #5]
 80004e0:	2b03      	cmp	r3, #3
 80004e2:	d820      	bhi.n	8000526 <GPIO_Init+0x62>
			temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)) ;
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	795b      	ldrb	r3, [r3, #5]
 80004e8:	461a      	mov	r2, r3
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	791b      	ldrb	r3, [r3, #4]
 80004ee:	005b      	lsls	r3, r3, #1
 80004f0:	fa02 f303 	lsl.w	r3, r2, r3
 80004f4:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber *2 );
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	681a      	ldr	r2, [r3, #0]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	791b      	ldrb	r3, [r3, #4]
 8000500:	005b      	lsls	r3, r3, #1
 8000502:	2103      	movs	r1, #3
 8000504:	fa01 f303 	lsl.w	r3, r1, r3
 8000508:	43db      	mvns	r3, r3
 800050a:	4619      	mov	r1, r3
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	400a      	ands	r2, r1
 8000512:	601a      	str	r2, [r3, #0]
			pGPIOHandle->pGPIOx->MODER |= temp ;
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	6819      	ldr	r1, [r3, #0]
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	697a      	ldr	r2, [r7, #20]
 8000520:	430a      	orrs	r2, r1
 8000522:	601a      	str	r2, [r3, #0]
 8000524:	e0e4      	b.n	80006f0 <GPIO_Init+0x22c>


		}else{
			// it is interrupt mode

			if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	795b      	ldrb	r3, [r3, #5]
 800052a:	2b04      	cmp	r3, #4
 800052c:	d117      	bne.n	800055e <GPIO_Init+0x9a>

				// configure the ftsr register
				EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 800052e:	4b52      	ldr	r3, [pc, #328]	@ (8000678 <GPIO_Init+0x1b4>)
 8000530:	68db      	ldr	r3, [r3, #12]
 8000532:	687a      	ldr	r2, [r7, #4]
 8000534:	7912      	ldrb	r2, [r2, #4]
 8000536:	4611      	mov	r1, r2
 8000538:	2201      	movs	r2, #1
 800053a:	408a      	lsls	r2, r1
 800053c:	4611      	mov	r1, r2
 800053e:	4a4e      	ldr	r2, [pc, #312]	@ (8000678 <GPIO_Init+0x1b4>)
 8000540:	430b      	orrs	r3, r1
 8000542:	60d3      	str	r3, [r2, #12]
				// clear the rtsr bit
				EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 8000544:	4b4c      	ldr	r3, [pc, #304]	@ (8000678 <GPIO_Init+0x1b4>)
 8000546:	689b      	ldr	r3, [r3, #8]
 8000548:	687a      	ldr	r2, [r7, #4]
 800054a:	7912      	ldrb	r2, [r2, #4]
 800054c:	4611      	mov	r1, r2
 800054e:	2201      	movs	r2, #1
 8000550:	408a      	lsls	r2, r1
 8000552:	43d2      	mvns	r2, r2
 8000554:	4611      	mov	r1, r2
 8000556:	4a48      	ldr	r2, [pc, #288]	@ (8000678 <GPIO_Init+0x1b4>)
 8000558:	400b      	ands	r3, r1
 800055a:	6093      	str	r3, [r2, #8]
 800055c:	e035      	b.n	80005ca <GPIO_Init+0x106>

			}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	795b      	ldrb	r3, [r3, #5]
 8000562:	2b05      	cmp	r3, #5
 8000564:	d117      	bne.n	8000596 <GPIO_Init+0xd2>

				// configure the rtsr register
				EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 8000566:	4b44      	ldr	r3, [pc, #272]	@ (8000678 <GPIO_Init+0x1b4>)
 8000568:	689b      	ldr	r3, [r3, #8]
 800056a:	687a      	ldr	r2, [r7, #4]
 800056c:	7912      	ldrb	r2, [r2, #4]
 800056e:	4611      	mov	r1, r2
 8000570:	2201      	movs	r2, #1
 8000572:	408a      	lsls	r2, r1
 8000574:	4611      	mov	r1, r2
 8000576:	4a40      	ldr	r2, [pc, #256]	@ (8000678 <GPIO_Init+0x1b4>)
 8000578:	430b      	orrs	r3, r1
 800057a:	6093      	str	r3, [r2, #8]
				// clear the rtsr bit
				EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 800057c:	4b3e      	ldr	r3, [pc, #248]	@ (8000678 <GPIO_Init+0x1b4>)
 800057e:	68db      	ldr	r3, [r3, #12]
 8000580:	687a      	ldr	r2, [r7, #4]
 8000582:	7912      	ldrb	r2, [r2, #4]
 8000584:	4611      	mov	r1, r2
 8000586:	2201      	movs	r2, #1
 8000588:	408a      	lsls	r2, r1
 800058a:	43d2      	mvns	r2, r2
 800058c:	4611      	mov	r1, r2
 800058e:	4a3a      	ldr	r2, [pc, #232]	@ (8000678 <GPIO_Init+0x1b4>)
 8000590:	400b      	ands	r3, r1
 8000592:	60d3      	str	r3, [r2, #12]
 8000594:	e019      	b.n	80005ca <GPIO_Init+0x106>

			}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	795b      	ldrb	r3, [r3, #5]
 800059a:	2b06      	cmp	r3, #6
 800059c:	d115      	bne.n	80005ca <GPIO_Init+0x106>
				// configure the rftsr register
				// configure the rtsr register
				EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 800059e:	4b36      	ldr	r3, [pc, #216]	@ (8000678 <GPIO_Init+0x1b4>)
 80005a0:	689b      	ldr	r3, [r3, #8]
 80005a2:	687a      	ldr	r2, [r7, #4]
 80005a4:	7912      	ldrb	r2, [r2, #4]
 80005a6:	4611      	mov	r1, r2
 80005a8:	2201      	movs	r2, #1
 80005aa:	408a      	lsls	r2, r1
 80005ac:	4611      	mov	r1, r2
 80005ae:	4a32      	ldr	r2, [pc, #200]	@ (8000678 <GPIO_Init+0x1b4>)
 80005b0:	430b      	orrs	r3, r1
 80005b2:	6093      	str	r3, [r2, #8]
				// clear the rtsr bit
				EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 80005b4:	4b30      	ldr	r3, [pc, #192]	@ (8000678 <GPIO_Init+0x1b4>)
 80005b6:	68db      	ldr	r3, [r3, #12]
 80005b8:	687a      	ldr	r2, [r7, #4]
 80005ba:	7912      	ldrb	r2, [r2, #4]
 80005bc:	4611      	mov	r1, r2
 80005be:	2201      	movs	r2, #1
 80005c0:	408a      	lsls	r2, r1
 80005c2:	4611      	mov	r1, r2
 80005c4:	4a2c      	ldr	r2, [pc, #176]	@ (8000678 <GPIO_Init+0x1b4>)
 80005c6:	430b      	orrs	r3, r1
 80005c8:	60d3      	str	r3, [r2, #12]

			}

			// configure the gpio port selection in syscfg_exticr
				// syscfg SYSCFG_EXTICR[x] configures which pin of which port issues interrupt
			uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4  ;
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	791b      	ldrb	r3, [r3, #4]
 80005ce:	089b      	lsrs	r3, r3, #2
 80005d0:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4  ;
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	791b      	ldrb	r3, [r3, #4]
 80005d6:	f003 0303 	and.w	r3, r3, #3
 80005da:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode = (GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx)) ;
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	4a26      	ldr	r2, [pc, #152]	@ (800067c <GPIO_Init+0x1b8>)
 80005e2:	4293      	cmp	r3, r2
 80005e4:	d060      	beq.n	80006a8 <GPIO_Init+0x1e4>
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a25      	ldr	r2, [pc, #148]	@ (8000680 <GPIO_Init+0x1bc>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d040      	beq.n	8000672 <GPIO_Init+0x1ae>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a23      	ldr	r2, [pc, #140]	@ (8000684 <GPIO_Init+0x1c0>)
 80005f6:	4293      	cmp	r3, r2
 80005f8:	d039      	beq.n	800066e <GPIO_Init+0x1aa>
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4a22      	ldr	r2, [pc, #136]	@ (8000688 <GPIO_Init+0x1c4>)
 8000600:	4293      	cmp	r3, r2
 8000602:	d032      	beq.n	800066a <GPIO_Init+0x1a6>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4a20      	ldr	r2, [pc, #128]	@ (800068c <GPIO_Init+0x1c8>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d02b      	beq.n	8000666 <GPIO_Init+0x1a2>
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a1f      	ldr	r2, [pc, #124]	@ (8000690 <GPIO_Init+0x1cc>)
 8000614:	4293      	cmp	r3, r2
 8000616:	d024      	beq.n	8000662 <GPIO_Init+0x19e>
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	4a1d      	ldr	r2, [pc, #116]	@ (8000694 <GPIO_Init+0x1d0>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d01d      	beq.n	800065e <GPIO_Init+0x19a>
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	4a1c      	ldr	r2, [pc, #112]	@ (8000698 <GPIO_Init+0x1d4>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d016      	beq.n	800065a <GPIO_Init+0x196>
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	4a1a      	ldr	r2, [pc, #104]	@ (800069c <GPIO_Init+0x1d8>)
 8000632:	4293      	cmp	r3, r2
 8000634:	d00f      	beq.n	8000656 <GPIO_Init+0x192>
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	4a19      	ldr	r2, [pc, #100]	@ (80006a0 <GPIO_Init+0x1dc>)
 800063c:	4293      	cmp	r3, r2
 800063e:	d008      	beq.n	8000652 <GPIO_Init+0x18e>
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	4a17      	ldr	r2, [pc, #92]	@ (80006a4 <GPIO_Init+0x1e0>)
 8000646:	4293      	cmp	r3, r2
 8000648:	d101      	bne.n	800064e <GPIO_Init+0x18a>
 800064a:	230a      	movs	r3, #10
 800064c:	e02d      	b.n	80006aa <GPIO_Init+0x1e6>
 800064e:	2300      	movs	r3, #0
 8000650:	e02b      	b.n	80006aa <GPIO_Init+0x1e6>
 8000652:	2309      	movs	r3, #9
 8000654:	e029      	b.n	80006aa <GPIO_Init+0x1e6>
 8000656:	2308      	movs	r3, #8
 8000658:	e027      	b.n	80006aa <GPIO_Init+0x1e6>
 800065a:	2307      	movs	r3, #7
 800065c:	e025      	b.n	80006aa <GPIO_Init+0x1e6>
 800065e:	2306      	movs	r3, #6
 8000660:	e023      	b.n	80006aa <GPIO_Init+0x1e6>
 8000662:	2305      	movs	r3, #5
 8000664:	e021      	b.n	80006aa <GPIO_Init+0x1e6>
 8000666:	2304      	movs	r3, #4
 8000668:	e01f      	b.n	80006aa <GPIO_Init+0x1e6>
 800066a:	2303      	movs	r3, #3
 800066c:	e01d      	b.n	80006aa <GPIO_Init+0x1e6>
 800066e:	2302      	movs	r3, #2
 8000670:	e01b      	b.n	80006aa <GPIO_Init+0x1e6>
 8000672:	2301      	movs	r3, #1
 8000674:	e019      	b.n	80006aa <GPIO_Init+0x1e6>
 8000676:	bf00      	nop
 8000678:	40013c00 	.word	0x40013c00
 800067c:	40020000 	.word	0x40020000
 8000680:	40020400 	.word	0x40020400
 8000684:	40020800 	.word	0x40020800
 8000688:	40020c00 	.word	0x40020c00
 800068c:	40021000 	.word	0x40021000
 8000690:	40021400 	.word	0x40021400
 8000694:	40021800 	.word	0x40021800
 8000698:	40021c00 	.word	0x40021c00
 800069c:	40022000 	.word	0x40022000
 80006a0:	40022400 	.word	0x40022400
 80006a4:	40022800 	.word	0x40022800
 80006a8:	2300      	movs	r3, #0
 80006aa:	747b      	strb	r3, [r7, #17]
				// enabling the clock for syscfg before configuring the registers for syscfg
			SYSCFG_CLOCK_ENABLE() ;
 80006ac:	4b5f      	ldr	r3, [pc, #380]	@ (800082c <GPIO_Init+0x368>)
 80006ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80006b0:	4a5e      	ldr	r2, [pc, #376]	@ (800082c <GPIO_Init+0x368>)
 80006b2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80006b6:	6453      	str	r3, [r2, #68]	@ 0x44
			SYSCFG->EXTICR[temp1] |= (portcode << ( temp2 * 4) );
 80006b8:	4a5d      	ldr	r2, [pc, #372]	@ (8000830 <GPIO_Init+0x36c>)
 80006ba:	7cfb      	ldrb	r3, [r7, #19]
 80006bc:	3302      	adds	r3, #2
 80006be:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006c2:	7c79      	ldrb	r1, [r7, #17]
 80006c4:	7cbb      	ldrb	r3, [r7, #18]
 80006c6:	009b      	lsls	r3, r3, #2
 80006c8:	fa01 f303 	lsl.w	r3, r1, r3
 80006cc:	4618      	mov	r0, r3
 80006ce:	4958      	ldr	r1, [pc, #352]	@ (8000830 <GPIO_Init+0x36c>)
 80006d0:	7cfb      	ldrb	r3, [r7, #19]
 80006d2:	4302      	orrs	r2, r0
 80006d4:	3302      	adds	r3, #2
 80006d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

			// enable the interrupt delivery in exti
			EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 80006da:	4b56      	ldr	r3, [pc, #344]	@ (8000834 <GPIO_Init+0x370>)
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	687a      	ldr	r2, [r7, #4]
 80006e0:	7912      	ldrb	r2, [r2, #4]
 80006e2:	4611      	mov	r1, r2
 80006e4:	2201      	movs	r2, #1
 80006e6:	408a      	lsls	r2, r1
 80006e8:	4611      	mov	r1, r2
 80006ea:	4a52      	ldr	r2, [pc, #328]	@ (8000834 <GPIO_Init+0x370>)
 80006ec:	430b      	orrs	r3, r1
 80006ee:	6013      	str	r3, [r2, #0]

		}
				temp = 0;
 80006f0:	2300      	movs	r3, #0
 80006f2:	617b      	str	r3, [r7, #20]

	// configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ) ;
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	799b      	ldrb	r3, [r3, #6]
 80006f8:	461a      	mov	r2, r3
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	791b      	ldrb	r3, [r3, #4]
 80006fe:	005b      	lsls	r3, r3, #1
 8000700:	fa02 f303 	lsl.w	r3, r2, r3
 8000704:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR  &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	689a      	ldr	r2, [r3, #8]
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	791b      	ldrb	r3, [r3, #4]
 8000710:	4619      	mov	r1, r3
 8000712:	2303      	movs	r3, #3
 8000714:	408b      	lsls	r3, r1
 8000716:	43db      	mvns	r3, r3
 8000718:	4619      	mov	r1, r3
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	400a      	ands	r2, r1
 8000720:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR  |= temp ;
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	6899      	ldr	r1, [r3, #8]
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	697a      	ldr	r2, [r7, #20]
 800072e:	430a      	orrs	r2, r1
 8000730:	609a      	str	r2, [r3, #8]
	temp = 0 ;
 8000732:	2300      	movs	r3, #0
 8000734:	617b      	str	r3, [r7, #20]

	// configure the pupd control
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPUPDControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ) ;
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	79db      	ldrb	r3, [r3, #7]
 800073a:	461a      	mov	r2, r3
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	791b      	ldrb	r3, [r3, #4]
 8000740:	005b      	lsls	r3, r3, #1
 8000742:	fa02 f303 	lsl.w	r3, r2, r3
 8000746:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR  &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	68da      	ldr	r2, [r3, #12]
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	791b      	ldrb	r3, [r3, #4]
 8000752:	4619      	mov	r1, r3
 8000754:	2303      	movs	r3, #3
 8000756:	408b      	lsls	r3, r1
 8000758:	43db      	mvns	r3, r3
 800075a:	4619      	mov	r1, r3
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	400a      	ands	r2, r1
 8000762:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR  |= temp ;
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	68d9      	ldr	r1, [r3, #12]
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	681b      	ldr	r3, [r3, #0]
 800076e:	697a      	ldr	r2, [r7, #20]
 8000770:	430a      	orrs	r2, r1
 8000772:	60da      	str	r2, [r3, #12]
	temp = 0 ;
 8000774:	2300      	movs	r3, #0
 8000776:	617b      	str	r3, [r7, #20]

	// configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << ( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ) ;
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	7a1b      	ldrb	r3, [r3, #8]
 800077c:	461a      	mov	r2, r3
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	791b      	ldrb	r3, [r3, #4]
 8000782:	fa02 f303 	lsl.w	r3, r2, r3
 8000786:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	685a      	ldr	r2, [r3, #4]
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	791b      	ldrb	r3, [r3, #4]
 8000792:	4619      	mov	r1, r3
 8000794:	2301      	movs	r3, #1
 8000796:	408b      	lsls	r3, r1
 8000798:	43db      	mvns	r3, r3
 800079a:	4619      	mov	r1, r3
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	681b      	ldr	r3, [r3, #0]
 80007a0:	400a      	ands	r2, r1
 80007a2:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp ;
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	6859      	ldr	r1, [r3, #4]
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	681b      	ldr	r3, [r3, #0]
 80007ae:	697a      	ldr	r2, [r7, #20]
 80007b0:	430a      	orrs	r2, r1
 80007b2:	605a      	str	r2, [r3, #4]
	temp = 0 ;
 80007b4:	2300      	movs	r3, #0
 80007b6:	617b      	str	r3, [r7, #20]


	// configure the alternate functionality
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	795b      	ldrb	r3, [r3, #5]
 80007bc:	2b02      	cmp	r3, #2
 80007be:	d131      	bne.n	8000824 <GPIO_Init+0x360>
		// configure the alternate function registers
		uint8_t temp1 , temp2 ;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  / 8 ;
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	791b      	ldrb	r3, [r3, #4]
 80007c4:	08db      	lsrs	r3, r3, #3
 80007c6:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8 ;
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	791b      	ldrb	r3, [r3, #4]
 80007cc:	f003 0307 	and.w	r3, r3, #7
 80007d0:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)) ;
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	681b      	ldr	r3, [r3, #0]
 80007d6:	7c3a      	ldrb	r2, [r7, #16]
 80007d8:	3208      	adds	r2, #8
 80007da:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007de:	7bfb      	ldrb	r3, [r7, #15]
 80007e0:	009b      	lsls	r3, r3, #2
 80007e2:	220f      	movs	r2, #15
 80007e4:	fa02 f303 	lsl.w	r3, r2, r3
 80007e8:	43db      	mvns	r3, r3
 80007ea:	4618      	mov	r0, r3
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	681b      	ldr	r3, [r3, #0]
 80007f0:	7c3a      	ldrb	r2, [r7, #16]
 80007f2:	4001      	ands	r1, r0
 80007f4:	3208      	adds	r2, #8
 80007f6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2)) ;
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	681b      	ldr	r3, [r3, #0]
 80007fe:	7c3a      	ldrb	r2, [r7, #16]
 8000800:	3208      	adds	r2, #8
 8000802:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	7a5b      	ldrb	r3, [r3, #9]
 800080a:	461a      	mov	r2, r3
 800080c:	7bfb      	ldrb	r3, [r7, #15]
 800080e:	009b      	lsls	r3, r3, #2
 8000810:	fa02 f303 	lsl.w	r3, r2, r3
 8000814:	4618      	mov	r0, r3
 8000816:	687b      	ldr	r3, [r7, #4]
 8000818:	681b      	ldr	r3, [r3, #0]
 800081a:	7c3a      	ldrb	r2, [r7, #16]
 800081c:	4301      	orrs	r1, r0
 800081e:	3208      	adds	r2, #8
 8000820:	f843 1022 	str.w	r1, [r3, r2, lsl #2]


	}

}
 8000824:	bf00      	nop
 8000826:	3718      	adds	r7, #24
 8000828:	46bd      	mov	sp, r7
 800082a:	bd80      	pop	{r7, pc}
 800082c:	40023800 	.word	0x40023800
 8000830:	40013800 	.word	0x40013800
 8000834:	40013c00 	.word	0x40013c00

08000838 <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx ,uint16_t Value ) {

	pGPIOx->ODR = Value ;

}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx , uint8_t PinNumber ) {
 8000838:	b480      	push	{r7}
 800083a:	b083      	sub	sp, #12
 800083c:	af00      	add	r7, sp, #0
 800083e:	6078      	str	r0, [r7, #4]
 8000840:	460b      	mov	r3, r1
 8000842:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber) ;
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	695b      	ldr	r3, [r3, #20]
 8000848:	78fa      	ldrb	r2, [r7, #3]
 800084a:	2101      	movs	r1, #1
 800084c:	fa01 f202 	lsl.w	r2, r1, r2
 8000850:	405a      	eors	r2, r3
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	615a      	str	r2, [r3, #20]

}
 8000856:	bf00      	nop
 8000858:	370c      	adds	r7, #12
 800085a:	46bd      	mov	sp, r7
 800085c:	bc80      	pop	{r7}
 800085e:	4770      	bx	lr

08000860 <__libc_init_array>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	4d0d      	ldr	r5, [pc, #52]	@ (8000898 <__libc_init_array+0x38>)
 8000864:	4c0d      	ldr	r4, [pc, #52]	@ (800089c <__libc_init_array+0x3c>)
 8000866:	1b64      	subs	r4, r4, r5
 8000868:	10a4      	asrs	r4, r4, #2
 800086a:	2600      	movs	r6, #0
 800086c:	42a6      	cmp	r6, r4
 800086e:	d109      	bne.n	8000884 <__libc_init_array+0x24>
 8000870:	4d0b      	ldr	r5, [pc, #44]	@ (80008a0 <__libc_init_array+0x40>)
 8000872:	4c0c      	ldr	r4, [pc, #48]	@ (80008a4 <__libc_init_array+0x44>)
 8000874:	f000 f818 	bl	80008a8 <_init>
 8000878:	1b64      	subs	r4, r4, r5
 800087a:	10a4      	asrs	r4, r4, #2
 800087c:	2600      	movs	r6, #0
 800087e:	42a6      	cmp	r6, r4
 8000880:	d105      	bne.n	800088e <__libc_init_array+0x2e>
 8000882:	bd70      	pop	{r4, r5, r6, pc}
 8000884:	f855 3b04 	ldr.w	r3, [r5], #4
 8000888:	4798      	blx	r3
 800088a:	3601      	adds	r6, #1
 800088c:	e7ee      	b.n	800086c <__libc_init_array+0xc>
 800088e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000892:	4798      	blx	r3
 8000894:	3601      	adds	r6, #1
 8000896:	e7f2      	b.n	800087e <__libc_init_array+0x1e>
 8000898:	080008c0 	.word	0x080008c0
 800089c:	080008c0 	.word	0x080008c0
 80008a0:	080008c0 	.word	0x080008c0
 80008a4:	080008c4 	.word	0x080008c4

080008a8 <_init>:
 80008a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008aa:	bf00      	nop
 80008ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008ae:	bc08      	pop	{r3}
 80008b0:	469e      	mov	lr, r3
 80008b2:	4770      	bx	lr

080008b4 <_fini>:
 80008b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008b6:	bf00      	nop
 80008b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008ba:	bc08      	pop	{r3}
 80008bc:	469e      	mov	lr, r3
 80008be:	4770      	bx	lr
